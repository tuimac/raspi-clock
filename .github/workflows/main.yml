name: Create Docker Image

on:
  push:
    branches:
      - main
      - test

jobs:
  create-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python3
        uses: actions/setup-python@v3
      - name: Install Python modules
        run: |
          python -m pip install --upgrade pip
          pip install boto3
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 21.x
      - name: Build Frontend
        working-directory: src/frontend
        run: |
          npm ci
          npm run build
          cp -rp build ../../docker/prod/frontend
      - name: Build Backend
        working-directory: src
        run: |
          cp -rp backend ../docker/prod/backend
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./docker/prod/
          platforms: linux/amd64,linux/arm64
          file: docker/prod/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/raspi-clock:${{ github.ref_name }}

  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Shutdown and delete container
        working-directory: docker/prod
        run: |
          GITHUB_BRANCH=${{ github.ref_name }} docker compose down --rmi all
      - name: Deploy new container
        working-directory: docker/prod
        run: |
          GITHUB_BRANCH=${{ github.ref_name }} docker compose up -d
      - name: Deploy command server
        working-directory: src/command
        run: |
          [[ ! -d '/opt/command-server' ]] && { sudo mkdir /opt/command-server; }
          sudo cp command-server.py /opt/command-server/command-server.py
          sudo cp command-server.service /etc/systemd/system/command-server.service
          sudo systemctl daemon-reload
          sudo systemctl stop command-server.service
          sudo systemctl enable command-server.service
          sudo systemctl start command-server.service
